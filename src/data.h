/*
 * data.h
 *
 *  Created on: Jul 21, 2020
 *      Author: Alex
 */

#ifndef INC_DATA_H_
#define INC_DATA_H_

#include <stdint.h>

#define CARD_NAME "8-Serial"
#define PROGRAM_NAME "8serial"
#define VERSION "1.0.1"

#define SLAVE_OWN_ADDRESS_BASE 0x68

#define OWB_SENS_CNT 16
#define OWB_TEMP_SIZE_B 2
#define UI_VAL_SIZE 2

#define HW_MAJOR	1
#define HW_MINOR	0
#define FW_MAJOR	1
#define FW_MINOR	0

#define CALIBRATION_KEY 0xaa
#define RESET_CALIBRATION_KEY	0x55
#define WDT_RESET_SIGNATURE     0xca
#define WDT_RESET_COUNT_SIGNATURE    0xbe

#define VOLT_TO_MILIVOLT 1000
#define MILIAMPER_TO_MICROAMPER 1000

//#define SLAVE_BUFF_SIZE 255

enum I2C_MEM{

	I2C_START_ADD = 0,

	I2C_MEM_WDT_RESET_ADD,
	I2C_MEM_WDT_INTERVAL_SET_ADD,
	I2C_MEM_WDT_INTERVAL_GET_ADD = I2C_MEM_WDT_INTERVAL_SET_ADD + 2,
	I2C_MEM_WDT_INIT_INTERVAL_SET_ADD = I2C_MEM_WDT_INTERVAL_GET_ADD + 2,
	I2C_MEM_WDT_INIT_INTERVAL_GET_ADD = I2C_MEM_WDT_INIT_INTERVAL_SET_ADD + 2,
	I2C_MEM_WDT_RESET_COUNT_ADD = I2C_MEM_WDT_INIT_INTERVAL_GET_ADD + 2,
	I2C_MEM_WDT_CLEAR_RESET_COUNT_ADD = I2C_MEM_WDT_RESET_COUNT_ADD + 2,
	I2C_MEM_WDT_POWER_OFF_INTERVAL_SET_ADD,
	I2C_MEM_WDT_POWER_OFF_INTERVAL_GET_ADD = I2C_MEM_WDT_POWER_OFF_INTERVAL_SET_ADD
		+ 4,
	I2C_MEM_DIAG_TEMPERATURE_ADD = I2C_MEM_WDT_POWER_OFF_INTERVAL_GET_ADD + 4,
	I2C_MEM_DIAG_24V,
	I2C_MEM_DIAG_24V_1,
	I2C_MEM_DIAG_5V,
	I2C_MEM_DIAG_5V_1,
	I2C_MEM_DIAG_3V,
	I2C_MEM_DIAG_3V_1,
	I2C_MEM_1WB_DEV,
	I2C_MEM_1WB_TEMP_ALL,
	I2C_MEM_1WB_ROM_CODE_IDX = I2C_MEM_1WB_TEMP_ALL + OWB_TEMP_SIZE_B,
	I2C_MEM_1WB_ROM_CODE, //rom code 64 bits
	I2C_MEM_1WB_ROM_CODE_END = I2C_MEM_1WB_ROM_CODE + 7,
	I2C_MEM_1WB_START_SEARCH,
	I2C_MEM_1WB_T1,
	I2C_MEM_1WB_T16 = I2C_MEM_1WB_T1 + OWB_SENS_CNT * OWB_TEMP_SIZE_B,
	I2C_MEM_SW_JTAG,
	I2C_MEM_BUTTON,
	I2C_MEM_REVISION_MAJOR_ADD = 0xfe,
	I2C_MEM_REVISION_MINOR,
	SLAVE_BUFF_SIZE,
};

#define ERROR -1
#define OK 0
#define ARG_CNT_ERR -2
#define ARG_RANGE_ERROR -3
#define IO_ERROR -4

#define STR_(x) #x
#define STR(x) STR_(x)
#define MASK_1 1
#define MASK_2 3
#define MASK_3 7
#define MASK_4 15
#define MASK_5 31
#define MASK_6 63
#define MASK_7 127
#define MASK_(x) MASK_##x
#define MASK(x) MASK_(x)

typedef enum {
	OFF,
	ON,
	STATE_COUNT,
} State;

#endif /* INC_DATA_H_ */
